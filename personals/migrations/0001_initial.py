# Generated by Django 4.0.5 on 2022-06-19 17:32

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import personals.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('kvantums', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_name', models.CharField(max_length=200, verbose_name='Организация')),
            ],
            options={
                'verbose_name_plural': 'Организации',
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('staff_photo', models.ImageField(upload_to=personals.models.staff_directory_path, verbose_name='Фотография работника')),
                ('first_name', models.CharField(help_text='Введите ваше имя', max_length=300, verbose_name='Имя')),
                ('surname', models.CharField(help_text='Введите вашу фамилию', max_length=300, verbose_name='Фамилия')),
                ('patronymic', models.CharField(help_text='Введите ваше отчество', max_length=300, verbose_name='Отчество')),
                ('gender', models.CharField(choices=[('Мужской', 'Мужской'), ('Женский', 'Женский')], max_length=30, verbose_name='Пол')),
                ('data_of_birth', models.DateField(help_text='Выберите вашу дату рождения', null=True, verbose_name='Дата рождения')),
                ('home_address', models.CharField(help_text='Введите ваш домашний адрес', max_length=500, null=True, verbose_name='Домашинй адрес')),
                ('email_address_0', models.EmailField(help_text='Введите вашу электронную почту', max_length=256, null=True, verbose_name='Почтовый ящик')),
                ('email_address_1', models.EmailField(help_text='Введите вашу дополнительную почту', max_length=256, null=True, verbose_name='Почтовый ящик(дополнительный')),
                ('email_address_2', models.EmailField(help_text='Введите еще один дополнительную почту', max_length=256, null=True, verbose_name='Почтовый ящик(дополнительный')),
                ('telephone_mobile', models.CharField(help_text='Введит ваш мобильный телефон', max_length=16, null=True, unique=True, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{8,15}$')], verbose_name='Мобильный телефон')),
                ('telephone_home', models.CharField(help_text='Введите ваш домашний номер телефона', max_length=16, null=True, unique=True, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{8,15}$')], verbose_name='Домашний телефон')),
                ('telephone_relative', models.CharField(help_text='Введите контактный номер телефона вашего родственника', max_length=16, null=True, unique=True, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{8,15}$')], verbose_name='Телефон родственника')),
                ('time_standard', models.CharField(help_text='Введите табельный номер', max_length=100, verbose_name='Табельный номер')),
                ('applicant_student', models.CharField(choices=[('Соискатель', 'Соискатель'), ('Аспирант', 'Аспирант')], help_text='Выберите из вариантов', max_length=30, verbose_name='Соискатель / Аспирант')),
                ('start_work', models.DateField(help_text='Выберите дату начала трудовой деятельности', null=True, verbose_name='Дата начала трудовой деятельности')),
                ('end_work', models.DateField(help_text='Выберите дату окончания трудовой деятельности', null=True, verbose_name='Дата окончания трудовой деятельности')),
                ('underemployment', models.BooleanField(default=False, help_text='Выберите тип занятости', verbose_name='Неполная занятость(Да или нет)по умлочанию - НЕТ')),
                ('retiree', models.BooleanField(default=False, help_text='Выберите один из вариантов', verbose_name='Пенсионер по выслуге лет, по умлочанию - НЕТ')),
                ('inn', models.CharField(help_text='Введите ваш ИНН', max_length=100, null=True, verbose_name='ИНН')),
                ('snils', models.CharField(help_text='введите ваш СНИЛС', max_length=100, null=True, verbose_name='СНИЛС')),
                ('passport_series', models.IntegerField(blank=True, help_text='Введите вашу серию паспорта 00 00', null=True, validators=[django.core.validators.RegexValidator(message="Вы должны ввести не более четырех(4) цифр серии вашего паспорта'", regex='^([0-9]{2}\\s{1}[0-9]{2})?$')], verbose_name='Серия паспорта')),
                ('passport_number', models.IntegerField(blank=True, help_text='Выберите ваш номер паспорта 000000', null=True, validators=[django.core.validators.RegexValidator(message="Вы должны ввести не более шести(6) цифр номера вашего паспорта'", regex='^([0-9]{6})?$')], verbose_name='Номер паспорта')),
                ('passport_issued_by', models.CharField(blank=True, help_text='Кем выдан паспорт УФМС / МВД', max_length=600, null=True, verbose_name='Кем выдан паспорт УФМС / МВД')),
                ('passport_date_of_issue', models.DateField(blank=True, help_text='Дата выдачи', null=True, verbose_name='Дата выдачи')),
                ('policy_series', models.CharField(blank=True, help_text='Введите серию полиса', max_length=256, null=True, verbose_name='Серия полиса')),
                ('policy_number', models.CharField(blank=True, help_text='Введите номер полеса', max_length=256, null=True, verbose_name='Номер полиса')),
                ('policy_date_of_issue', models.DateField(blank=True, help_text='Введите дату выдачи полеса', null=True, verbose_name='Дата выдачи полиса')),
                ('policy_insured_company', models.CharField(blank=True, help_text='Введите компанию страхователя', max_length=256, null=True, verbose_name='Компания страхователь')),
                ('account_id', models.ForeignKey(default=None, error_messages={'unique': 'Выберите пользователя из базы'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Выберите пользователя из базы(Преподавателя)')),
                ('organization', models.ForeignKey(help_text='Выберите организацию', on_delete=django.db.models.deletion.CASCADE, to='personals.organization', verbose_name='Организация')),
            ],
        ),
        migrations.CreateModel(
            name='StaffQualificationGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qualification_group', models.CharField(max_length=100, verbose_name='Квалификационная группа')),
            ],
            options={
                'verbose_name_plural': 'Квалификационная группа (персонал)',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('images', models.ImageField(upload_to='images/teachers', verbose_name='Изображение')),
                ('link_web_main', models.URLField(blank=True, null=True, verbose_name='Ссылка на персональную страниц')),
                ('link_web_facebook', models.URLField(blank=True, max_length=500, null=True, verbose_name='Ссылка на страницу FaceBook')),
                ('link_web_twitter', models.URLField(blank=True, max_length=500, null=True, verbose_name='Ссылка на страницу Twitter')),
                ('link_web_skype', models.URLField(blank=True, max_length=500, null=True, verbose_name='Ссылка на страницу Skype')),
                ('link_web_google', models.URLField(blank=True, max_length=500, null=True, verbose_name='Ссылка на страницу Google')),
                ('link_web_vk', models.URLField(blank=True, max_length=500, null=True, verbose_name='Ссылка на страницу VK')),
                ('teacher_desc', models.CharField(blank=True, max_length=500, null=True, verbose_name='Описание, образоваине и т.д')),
                ('kvantum', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kvantums.kvantum', verbose_name='Квантум')),
                ('organization_show', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personals.organization', verbose_name='Организация')),
                ('teacher_full_name', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='personals.staff', verbose_name='Выберите пользователя из базы(Преподавателя)')),
            ],
            options={
                'verbose_name_plural': 'Преподаватели',
            },
        ),
        migrations.AddField(
            model_name='staff',
            name='qualification_group',
            field=models.ForeignKey(help_text='Введите квалификационную группу работника', on_delete=django.db.models.deletion.CASCADE, to='personals.staffqualificationgroup', verbose_name='Квалификационная группа'),
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('events_name', models.CharField(help_text='Введите название мероприятия', max_length=400, verbose_name='Название мероприятия')),
                ('events_name_show', models.CharField(choices=[('event_0', 'Выставка'), ('event_1', 'Конкурс'), ('event_2', 'Конференция'), ('event_3', 'Мастер-класс'), ('event_4', 'Семинар')], help_text='Выберите вид мероприятия', max_length=50, verbose_name='Вид мероприятия')),
                ('events_level', models.CharField(choices=[('event_0', 'Выставка'), ('event_1', 'Конкурс'), ('event_2', 'Конференция'), ('event_3', 'Мастер-класс'), ('event_4', 'Семинар')], help_text='Выберите уровень проведения', max_length=50, verbose_name='Уровень проведения')),
                ('events_form', models.CharField(choices=[('event_form_0', 'Очно'), ('event_form_1', 'Заочно')], help_text='Выберите форму участия', max_length=50, verbose_name='Форма участия')),
                ('events_status', models.CharField(choices=[('event_status_0', 'Победитель'), ('event_status_1', 'Лауреат'), ('event_status_2', 'Участник')], help_text='Выберите статус участия', max_length=50, verbose_name='Статус участия')),
                ('events_concurs_name', models.CharField(help_text='Введите название конкурсного мероприятия', max_length=400, verbose_name='Название конкурсного мероприятия')),
                ('events_participation_year', models.DateField(blank=True, help_text='Введите год участия', null=True, verbose_name='Год участия')),
                ('staff_id', models.ForeignKey(help_text='Выберите педагога из списка', on_delete=django.db.models.deletion.CASCADE, to='personals.staff', verbose_name='Педагог')),
            ],
            options={
                'verbose_name_plural': 'Мероприятия',
            },
        ),
    ]
